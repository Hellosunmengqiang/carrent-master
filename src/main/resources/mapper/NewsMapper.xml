<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pu.carrent.dao.NewsMapper" >
  <resultMap id="BaseResultMap" type="com.pu.carrent.entity.News" >
    <id column="newsId" property="newsid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="creatTime" property="creattime" jdbcType="TIMESTAMP" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    newsId, title, content, creatTime, userId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pu.carrent.entityExample.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_news
    where newsId = #{newsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_news
    where newsId = #{newsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pu.carrent.entityExample.NewsExample" >
    delete from t_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pu.carrent.entity.News" >
    insert into t_news (newsId, title, content, 
      creatTime, userId)
    values (#{newsid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{creattime,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pu.carrent.entity.News" >
    insert into t_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsid != null" >
        newsId,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="creattime != null" >
        creatTime,
      </if>
      <if test="userid != null" >
        userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsid != null" >
        #{newsid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pu.carrent.entityExample.NewsExample" resultType="java.lang.Integer" >
    select count(*) from t_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_news
    <set >
      <if test="record.newsid != null" >
        newsId = #{record.newsid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.creattime != null" >
        creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_news
    set newsId = #{record.newsid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      userId = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pu.carrent.entity.News" >
    update t_news
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null" >
        creatTime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where newsId = #{newsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pu.carrent.entity.News" >
    update t_news
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      creatTime = #{creattime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=INTEGER}
    where newsId = #{newsid,jdbcType=INTEGER}
  </update>
  <select id="selectNewsWithDetail" resultMap="NewsDetail">
    select * from t_news join t_user tu on t_news.userId = tu.userId
  </select>
  <resultMap id="NewsDetail" type="com.pu.carrent.entity.News">
    <id column="newsId" property="newsid"/>
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="creatTime" property="creattime"/>
    <collection property="creator" ofType="com.pu.carrent.entity.User">
      <result column="userName" property="username"/>
    </collection>
  </resultMap>
  <select id="selectNewsWithDetailById" resultMap="NewsDetail">
    select * from t_news join t_user tu on t_news.userId = tu.userId
    where newsId=#{newsId,jdbcType=INTEGER}
  </select>
</mapper>