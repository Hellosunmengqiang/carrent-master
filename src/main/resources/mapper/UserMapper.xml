<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pu.carrent.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.pu.carrent.entity.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="uTypeId" property="utypeid" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="isDeleted" property="isdeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, userName, uTypeId, email, phone, password, info, icon, isDeleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pu.carrent.entityExample.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pu.carrent.entityExample.UserExample" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pu.carrent.entity.User" >
    insert into t_user (userId, userName, uTypeId, 
      email, phone, password, 
      info, icon, isDeleted
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{utypeid,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{info,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{isdeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pu.carrent.entity.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="utypeid != null" >
        uTypeId,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="isdeleted != null" >
        isDeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="utypeid != null" >
        #{utypeid,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pu.carrent.entityExample.UserExample" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.utypeid != null" >
        uTypeId = #{record.utypeid,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null" >
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.isdeleted != null" >
        isDeleted = #{record.isdeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set userId = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      uTypeId = #{record.utypeid,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      isDeleted = #{record.isdeleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pu.carrent.entity.User" >
    update t_user
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="utypeid != null" >
        uTypeId = #{utypeid,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null" >
        isDeleted = #{isdeleted,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pu.carrent.entity.User" >
    update t_user
    set userName = #{username,jdbcType=VARCHAR},
      uTypeId = #{utypeid,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      isDeleted = #{isdeleted,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <select id="selectUserWithDetailById" parameterType="java.lang.Integer" resultMap="UserDetail">
    select * from t_user u left join t_usertype ut on u.uTypeId = ut.uTypeId left join t_order o on u.userId = o.userId left join t_car c on o.carId = c.carId left join t_cartype tc on c.cTypeId = tc.cTypeId left join t_carbrand t on c.brandId = t.brandId
    where u.userId=#{userId,jdbcType=INTEGER}
  </select>
  <resultMap id="UserDetail" type="com.pu.carrent.entity.User">
    <id column="userId" property="userid"/>
    <result column="userName" property="username"/>
    <result column="email" property="email"/>
    <result column="phone" property="phone"/>
    <result column="password" property="password"/>
    <result column="info" property="info"/>
    <result column="icon" property="icon"/>
    <collection property="userType" ofType="com.pu.carrent.entity.UserType">
      <id column="uTypeId" property="utypeid"/>
      <result column="uTypeName" property="utypename"/>
    </collection>
    <collection property="orders" ofType="com.pu.carrent.entity.Order">
      <result property="creattime" column="creatTime"/>
      <result column="endTime" property="endtime"/>
      <result column="totalPrice" property="totalprice"/>
      <result column="isPaid" property="ispaid"/>
      <collection property="carDetail" ofType="com.pu.carrent.entity.CarDetail">
        <collection property="car" ofType="com.pu.carrent.entity.Car">
          <result column="carName" property="carname"/>
          <collection property="carType" ofType="com.pu.carrent.entity.CarType">
            <result column="cTypeName" property="ctypename"/>
          </collection>
          <collection property="carBrand" ofType="com.pu.carrent.entity.CarBrand">
            <result column="brandName" property="brandname"/>
          </collection>
        </collection>
      </collection>
    </collection>
  </resultMap>
  <select id="selectUsersWithDetail" resultMap="UserDetail">
    select * from t_user u left join t_usertype ut on u.uTypeId = ut.uTypeId left join t_order o on u.userId = o.userId left join t_car c on o.carId = c.carId left join t_cartype tc on c.cTypeId = tc.cTypeId left join t_carbrand t on c.brandId = t.brandId
  </select>
</mapper>