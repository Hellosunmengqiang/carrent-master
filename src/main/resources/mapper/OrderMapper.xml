<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pu.carrent.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.pu.carrent.entity.Order" >
    <id column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="carId" property="carid" jdbcType="INTEGER" />
    <result column="creatTime" property="creattime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="totalPrice" property="totalprice" jdbcType="DECIMAL" />
    <result column="isPaid" property="ispaid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, userId, carId, creatTime, endTime, totalPrice, isPaid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pu.carrent.entityExample.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pu.carrent.entityExample.OrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pu.carrent.entity.Order" >
    insert into t_order (orderId, userId, carId, 
      creatTime, endTime, totalPrice, 
      isPaid)
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{carid,jdbcType=INTEGER}, 
      #{creattime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{totalprice,jdbcType=DECIMAL}, 
      #{ispaid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pu.carrent.entity.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="carid != null" >
        carId,
      </if>
      <if test="creattime != null" >
        creatTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="totalprice != null" >
        totalPrice,
      </if>
      <if test="ispaid != null" >
        isPaid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        #{carid,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalprice != null" >
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="ispaid != null" >
        #{ispaid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pu.carrent.entityExample.OrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.carid != null" >
        carId = #{record.carid,jdbcType=INTEGER},
      </if>
      <if test="record.creattime != null" >
        creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalprice != null" >
        totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      </if>
      <if test="record.ispaid != null" >
        isPaid = #{record.ispaid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set orderId = #{record.orderid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      carId = #{record.carid,jdbcType=INTEGER},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      isPaid = #{record.ispaid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pu.carrent.entity.Order" >
    update t_order
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        carId = #{carid,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        creatTime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalprice != null" >
        totalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="ispaid != null" >
        isPaid = #{ispaid,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pu.carrent.entity.Order" >
    update t_order
    set userId = #{userid,jdbcType=INTEGER},
      carId = #{carid,jdbcType=INTEGER},
      creatTime = #{creattime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      totalPrice = #{totalprice,jdbcType=DECIMAL},
      isPaid = #{ispaid,jdbcType=INTEGER}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <select id="selectOrdersWithDetail" resultMap="OrderDetail">
    select orderId, tc.carId, t_cardetail.level, cdId,t_order.userId, isPaid,creatTime,endTime,totalPrice,t_order.carId,userName,phone,email,carname,t_cardetail.plate,pictures,price,tc.brandid, t_cardetail.isDeleted,cTypeName,brandname,lName,cName,pName
    from t_order join t_user tu on t_order.userId = tu.userId join t_cardetail on t_order.carId = t_cardetail.cdId join t_car tc on t_cardetail.carId = tc.carId join t_carbrand t on tc.brandId = t.brandId join t_cartype tc2 on tc.cTypeId = tc2.cTypeId join t_location tl on tc.lId = tl.lId join t_city tc3 on tl.cId = tc3.cId join t_province tp on tc3.pId = tp.pId
  </select>
  <resultMap id="OrderDetail" type="com.pu.carrent.entity.Order">
    <id property="orderid" column="orderId"/>
    <result column="userId" property="userid"/>
    <result column="isPaid" property="ispaid"/>
    <result column="creatTime" property="creattime"/>
    <result column="endTime" property="endtime"/>
    <result column="totalPrice" property="totalprice"/>
    <result column="carId" property="carid"/>
    <collection property="user" ofType="com.pu.carrent.entity.User">
      <result column="userName" property="username"/>
      <result column="phone" property="phone"/>
      <result column="email" property="email"/>
    </collection>
    <collection property="carDetail" ofType="com.pu.carrent.entity.CarDetail">
      <id column="cdId" property="cdid"/>
      <result property="level" column="level"/>
      <result property="plate" column="plate"/>
      <result property="pictures" column="pictures"/>
      <result property="isdeleted" column="isDeleted"/>
      <collection property="car" ofType="com.pu.carrent.entity.Car">
        <id column="carId" property="carid"/>
        <result column="price" property="price"/>
        <result column="brandId" property="brandid"/>
        <result column="carName" property="carname"/>
        <collection property="carType" ofType="com.pu.carrent.entity.CarType">
          <result column="cTypeName" property="ctypename"/>
        </collection>
        <collection property="carBrand" ofType="com.pu.carrent.entity.CarBrand">
          <result property="brandname" column="brandName"/>
        </collection>
        <collection property="location" ofType="com.pu.carrent.entity.Location">
          <result column="lName" property="lname"/>
          <collection property="city" ofType="com.pu.carrent.entity.City">
            <result column="cName" property="cname"/>
            <collection property="province" ofType="com.pu.carrent.entity.Province">
              <result column="pName" property="pname"/>
            </collection>
          </collection>
        </collection>
      </collection>
    </collection>
  </resultMap>
  <select id="selectOrdersNotPaidWithDetail" resultMap="OrderDetail">
     select orderId, tc.carId,t_cardetail.level,cdId,t_order.userId, isPaid,creatTime,endTime,totalPrice,t_order.carId,userName,phone,email,carname,t_cardetail.plate,pictures,price,tc.brandid, t_cardetail.isDeleted,cTypeName,brandname,lName,cName,pName
    from t_order left join t_user tu on t_order.userId = tu.userId left join t_cardetail on t_order.carId = t_cardetail.cdId left join t_car tc on t_cardetail.carId = tc.carId join t_carbrand t on tc.brandId = t.brandId left join t_cartype tc2 on tc.cTypeId = tc2.cTypeId left join t_location tl on tc.lId = tl.lId left join t_city tc3 on tl.cId = tc3.cId left join t_province tp on tc3.pId = tp.pId
    where isPaid=0
  </select>
  <select id="selectOrderWithDetailById" resultMap="OrderDetail">
     select orderId, tc.carId,t_cardetail.level,cdId,t_order.userId, isPaid,creatTime,endTime,totalPrice,t_order.carId,userName,phone,email,carname,t_cardetail.plate,pictures,price,tc.brandid, t_cardetail.isDeleted,cTypeName,brandname,lName,cName,pName
    from t_order left join t_user tu on t_order.userId = tu.userId left join t_cardetail on t_order.carId = t_cardetail.cdId left join t_car tc on t_cardetail.carId = tc.carId left join t_carbrand t on tc.brandId = t.brandId left join t_cartype tc2 on tc.cTypeId = tc2.cTypeId left join t_location tl on tc.lId = tl.lId left join t_city tc3 on tl.cId = tc3.cId left join t_province tp on tc3.pId = tp.pId
    where orderId=#{orderId,jdbcType=INTEGER}
  </select>

  <select id="findOrdersByUserId" resultMap="OrderDetail">
     select orderId, tc.carId,t_cardetail.level,cdId,t_order.userId, isPaid,creatTime,endTime,totalPrice,t_order.carId,userName,phone,email,carname,t_cardetail.plate,pictures,price,tc.brandid, t_cardetail.isDeleted,cTypeName,brandname,lName,cName,pName
    from t_order left join t_user tu on t_order.userId = tu.userId left join t_cardetail on t_order.carId = t_cardetail.cdId left join t_car tc on t_cardetail.carId = tc.carId left join t_carbrand t on tc.brandId = t.brandId left join t_cartype tc2 on tc.cTypeId = tc2.cTypeId left join t_location tl on tc.lId = tl.lId left join t_city tc3 on tl.cId = tc3.cId left join t_province tp on tc3.pId = tp.pId
    where t_order.userId=#{userId,jdbcType=INTEGER} order by isPaid
  </select>

  <select id="findRefunds" resultMap="OrderDetail">
     select orderId, tc.carId,t_cardetail.level,cdId, t_order.userId, isPaid,creatTime,endTime,totalPrice,t_order.carId,userName,phone,email,carname,t_cardetail.plate,pictures,price,tc.brandid, t_cardetail.isDeleted,cTypeName,brandname,lName,cName,pName
    from t_order left join t_user tu on t_order.userId = tu.userId left join t_cardetail on t_order.carId = t_cardetail.cdId left join t_car tc on t_cardetail.carId = tc.carId left join t_carbrand t on tc.brandId = t.brandId left join t_cartype tc2 on tc.cTypeId = tc2.cTypeId left join t_location tl on tc.lId = tl.lId left join t_city tc3 on tl.cId = tc3.cId left join t_province tp on tc3.pId = tp.pId
    where isPaid=-1
  </select>

  <select id="findRefundsByUserId" resultMap="OrderDetail">
     select orderId, tc.carId,t_cardetail.level,cdId, t_order.userId, isPaid,creatTime,endTime,totalPrice,t_order.carId,userName,phone,email,carname,t_cardetail.plate,pictures,price,tc.brandid, t_cardetail.isDeleted,cTypeName,brandname,lName,cName,pName
    from t_order left join t_user tu on t_order.userId = tu.userId left join t_cardetail on t_order.carId = t_cardetail.cdId left join t_car tc on t_cardetail.carId = tc.carId left join t_carbrand t on tc.brandId = t.brandId left join t_cartype tc2 on tc.cTypeId = tc2.cTypeId left join t_location tl on tc.lId = tl.lId left join t_city tc3 on tl.cId = tc3.cId left join t_province tp on tc3.pId = tp.pId
    where isPaid=-1 and t_order.userId=#{userId,jdbcType=INTEGER}
  </select>

  <select id="findOrderDataByProvince" resultType="com.pu.carrent.entity.OrderData">
        select count(orderId) as orderNum, pName from t_order left join t_cardetail tc on t_order.carId = tc.cdId left join t_car t on tc.carId = t.carId left join t_location tl on t.lId = tl.lId left join t_city tc2 on tl.cId = tc2.cId left join t_province tp on tc2.pId = tp.pId
        group by tp.pId
  </select>
</mapper>